annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
print(p)
tellbayes_lr = ifelse(new_ball[1] > first_ball[1], "right", "left")
tellbayes_ud = ifelse(new_ball[2] > first_ball[2], "above", "below")
lr = data.frame(lr = tellbayes_lr, ud = tellbayes_ud)
x = table(lr$lr) %>% prop.table() * 100
y = table(lr$ud) %>% prop.table() * 100
plot_df = plot_df %>%
add_row(x = x - 99,
y = y - 99,
type = "prior")
p = ggplot() +
geom_point(aes(x = x, y = y, col = type), data = plot_df) +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
print(p)
sp <- ggscatter(plot_df, x = "x", y = "y",
color = "type", size = 3, alpha = 0.6) +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
# Marginal density plot of x (top panel) and y (right panel)
xplot <- ggdensity(plot_df[plot_df$type == "prior",], "x", fill = "type", col = "#619CFF") + xlim(1, 100)
yplot <- ggdensity(plot_df[plot_df$type == "prior",],
"y", fill = "type") + xlim(1, 100) +
rotate()
# Cleaning the plots
sp <- sp + rremove("legend")
yplot <- yplot + clean_theme() + rremove("legend")
xplot <- xplot + clean_theme() + rremove("legend")
# Arranging the plot using cowplot
plot_grid(xplot, NULL, sp, yplot, ncol = 2, align = "hv",
rel_widths = c(6, 1), rel_heights = c(1, 6))
sp <- ggscatter(plot_df, x = "x", y = "y",
color = "type", size = 3, alpha = 0.6) +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
# Marginal density plot of x (top panel) and y (right panel)
xplot <- ggdensity(plot_df[plot_df$type == "prior",], "x", fill = "type", fill = "#619CFF") + xlim(1, 100)
sp <- ggscatter(plot_df, x = "x", y = "y",
color = "type", size = 3, alpha = 0.6) +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
# Marginal density plot of x (top panel) and y (right panel)
xplot <- ggdensity(plot_df[plot_df$type == "prior",], "x", fill = "#619CFF") + xlim(1, 100)
yplot <- ggdensity(plot_df[plot_df$type == "prior",],
"y", fill = "type") + xlim(1, 100) +
rotate()
# Cleaning the plots
sp <- sp + rremove("legend")
yplot <- yplot + clean_theme() + rremove("legend")
xplot <- xplot + clean_theme() + rremove("legend")
# Arranging the plot using cowplot
plot_grid(xplot, NULL, sp, yplot, ncol = 2, align = "hv",
rel_widths = c(6, 1), rel_heights = c(1, 6))
sp <- ggscatter(plot_df, x = "x", y = "y",
color = "type", size = 3, alpha = 0.6) +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
# Marginal density plot of x (top panel) and y (right panel)
xplot <- ggdensity(plot_df[plot_df$type == "prior",], "x", fill = "#619CFF") + xlim(1, 100)
yplot <- ggdensity(plot_df[plot_df$type == "prior",],
"y", fill = "#619CFF") + xlim(1, 100) +
rotate()
# Cleaning the plots
sp <- sp + rremove("legend")
yplot <- yplot + clean_theme() + rremove("legend")
xplot <- xplot + clean_theme() + rremove("legend")
# Arranging the plot using cowplot
plot_grid(xplot, NULL, sp, yplot, ncol = 2, align = "hv",
rel_widths = c(6, 1), rel_heights = c(1, 6))
knitr::opts_chunk$set(echo = FALSE, message = FALSE)
library(png)
library(grid)
library(tidyverse)
library(ggpubr)
library(cowplot)
set.seed(4196)
first_ball = c(runif(1, 1, 100), runif(1, 1, 100))
prior = c(50, 50)
bayes = readPNG("gallery/bayes.png")
b1 = rasterGrob(bayes, interpolate=FALSE)
plot_df = rbind(first_ball, prior) %>% data.frame()
colnames(plot_df) = c("x", "y")
plot_df$type = c("first", "prior")
p = ggplot() +
geom_point(aes(x = x, y = y, col = type), data = plot_df) +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
print(p)
new_ball = c(runif(1, 1, 100), runif(1, 1, 100))
plot_df = plot_df %>% add_row(x = new_ball[1],
y = new_ball[2],
type = "new_ball")
p = ggplot() +
geom_point(aes(x = x, y = y, col = type), data = plot_df) +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
print(p)
tellbayes_lr = ifelse(new_ball[1] > first_ball[1], "right", "left")
tellbayes_ud = ifelse(new_ball[2] > first_ball[2], "above", "below")
lr = data.frame(lr = tellbayes_lr, ud = tellbayes_ud)
x = table(lr$lr) %>% prop.table() * 100
y = table(lr$ud) %>% prop.table() * 100
plot_df = plot_df %>%
add_row(x = x - 99,
y = y,
type = "prior")
p = ggplot() +
geom_point(aes(x = x, y = y, col = type), data = plot_df) +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
print(p)
lr = data.frame(lr = "left", ud = "above")
for(i in 1:10){
new_ball = c(runif(1, 1, 100), runif(1, 1, 100))
plot_df = plot_df %>%
add_row(x = new_ball[1],
y = new_ball[2],
type = "new_ball")
tellbayes_lr = ifelse(new_ball[1] > first_ball[1], "right", "left")
tellbayes_ud = ifelse(new_ball[2] > first_ball[2], "above", "below")
lr = lr %>%
add_row(lr = tellbayes_lr,
ud = tellbayes_ud)
x = table(lr$lr) %>% prop.table() * 100
y = table(lr$ud) %>% prop.table() * 100
plot_df = plot_df %>%
add_row(x = x[1],
y = y[2],
type = "prior")
}
sp <- ggscatter(plot_df, x = "x", y = "y",
color = "type", size = 3, alpha = 0.6) +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
# Marginal density plot of x (top panel) and y (right panel)
xplot <- ggdensity(plot_df[plot_df$type == "prior",], "x", fill = "#619CFF") + xlim(1, 100)
yplot <- ggdensity(plot_df[plot_df$type == "prior",],
"y", fill = "#619CFF") + xlim(1, 100) +
rotate()
# Cleaning the plots
sp <- sp + rremove("legend")
yplot <- yplot + clean_theme() + rremove("legend")
xplot <- xplot + clean_theme() + rremove("legend")
# Arranging the plot using cowplot
plot_grid(xplot, NULL, sp, yplot, ncol = 2, align = "hv",
rel_widths = c(6, 1), rel_heights = c(1, 6))
lr = data.frame(lr = "left", ud = "above")
for(i in 1:1000){
new_ball = c(runif(1, 1, 100), runif(1, 1, 100))
plot_df = plot_df %>%
add_row(x = new_ball[1],
y = new_ball[2],
type = "new_ball")
tellbayes_lr = ifelse(new_ball[1] > first_ball[1], "right", "left")
tellbayes_ud = ifelse(new_ball[2] > first_ball[2], "above", "below")
lr = lr %>%
add_row(lr = tellbayes_lr,
ud = tellbayes_ud)
x = table(lr$lr) %>% prop.table() * 100
y = table(lr$ud) %>% prop.table() * 100
plot_df = plot_df %>%
add_row(x = x[1],
y = y[2],
type = "prior")
}
sp <- ggscatter(plot_df, x = "x", y = "y",
color = "type", size = 3, alpha = 0.6) +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
# Marginal density plot of x (top panel) and y (right panel)
xplot <- ggdensity(plot_df[plot_df$type == "prior",], "x", fill = "#619CFF") + xlim(1, 100)
yplot <- ggdensity(plot_df[plot_df$type == "prior",],
"y", fill = "#619CFF") + xlim(1, 100) +
rotate()
# Cleaning the plots
sp <- sp + rremove("legend")
yplot <- yplot + clean_theme() + rremove("legend")
xplot <- xplot + clean_theme() + rremove("legend")
# Arranging the plot using cowplot
plot_grid(xplot, NULL, sp, yplot, ncol = 2, align = "hv",
rel_widths = c(6, 1), rel_heights = c(1, 6))
first_ball
sp <- ggscatter(plot_df, x = "x", y = "y",
color = "type", size = 3, alpha = 0.6) +
geom_point(x = 40.68677, y = 47.58026, fill = "#F8766D")
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
sp <- ggscatter(plot_df, x = "x", y = "y",
color = "type", size = 3, alpha = 0.6) +
geom_point(x = 40.68677, y = 47.58026, fill = "#F8766D") +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
# Marginal density plot of x (top panel) and y (right panel)
xplot <- ggdensity(plot_df[plot_df$type == "prior",], "x", fill = "#619CFF") + xlim(1, 100)
yplot <- ggdensity(plot_df[plot_df$type == "prior",],
"y", fill = "#619CFF") + xlim(1, 100) +
rotate()
# Cleaning the plots
sp <- sp + rremove("legend")
yplot <- yplot + clean_theme() + rremove("legend")
xplot <- xplot + clean_theme() + rremove("legend")
# Arranging the plot using cowplot
plot_grid(xplot, NULL, sp, yplot, ncol = 2, align = "hv",
rel_widths = c(6, 1), rel_heights = c(1, 6))
sp <- ggscatter(plot_df, x = "x", y = "y",
color = "type", size = 3, alpha = 0.6) +
geom_point(x = 40.68677, y = 47.58026, col = "#F8766D") +
annotation_custom(b1, xmin=40, xmax=60, ymin=-10, ymax=15) + xlim(c(1, 100)) + ylim(c(1, 100)) +
theme_minimal() + theme(axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank(), legend.position = "none")
# Marginal density plot of x (top panel) and y (right panel)
xplot <- ggdensity(plot_df[plot_df$type == "prior",], "x", fill = "#619CFF") + xlim(1, 100)
yplot <- ggdensity(plot_df[plot_df$type == "prior",],
"y", fill = "#619CFF") + xlim(1, 100) +
rotate()
# Cleaning the plots
sp <- sp + rremove("legend")
yplot <- yplot + clean_theme() + rremove("legend")
xplot <- xplot + clean_theme() + rremove("legend")
# Arranging the plot using cowplot
plot_grid(xplot, NULL, sp, yplot, ncol = 2, align = "hv",
rel_widths = c(6, 1), rel_heights = c(1, 6))
tail(plot_df)
first_ball
library(blogdown)
## update talks
source('content/talk/write-talk-files.R')
## update publications
#source()
## build website
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
unlink('content/post/2019-05-17-statistry-bayesrule/2019-05-17-statistry-bayesrule_cache', recursive = TRUE)
n = 56
x = c(.57 * n, .43 * n)
binom.test(x)
n = 56
x = c(.57 * n, .43 * n)
binom.test(x)
x
x = c(.57 * n, .43 * n) %>% round()
x
binom.test(x)
x
x = c(32, 24)
binom.test(x)
x = c(31, 25)
binom.test(x)
x = c(33, 23)
binom.test(x)
## birthday attendence
binom.test(54, 79-54)
## birthday attendence
binom.test(c(54, 79-54))
# weddings
binom.test(c(32, 56-32))
# weddings
binom.test(c(32, 79-32))
# weddings
binom.test(c(32, 56-32))
# weddings
binom.test(c(32, 56-32))
## birthday attendence
binom.test(c(54, 79-54))
## birthday attendence
binom.test(c(56, 79-56))
## birthday attendence
binom.test(c(52, 79-52))
## birthday attendence
binom.test(c(50, 79-50))
blogdown::build_dir()
blogdown::serve_site()
??readOGR
install.packages('rgdal')
library(rgdal)
map = readOGR('~/Downloads/Untitled layer.kml')
map = readOGR('~/Downloads/Untitled layer.kml')
coords = read.csv('~/Desktop/caitlin-coords.csv')
library(raster)
library(dplyr)
library(ggplot2)
library(raster)
library(rasterVis)
install.packages('rasterVis')
getData('GADM', country='NZL', level=1)
?raster::getData
eng1 = getData('GADM', country='ENG', level=1)
eng1 = getData('GADM', country='UK', level=1)
eng1 = getData('GADM', country='GBR', level=1)
dem = getData("SRTM",lat=eng1[2],lon=eng1[1],path=datadir)
dem = getData("SRTM",lat=eng1[2],lon=eng1[1])
eng1c <- gCentroid(eng1) %>% coordinates()
library(rasterVis)
library(scales)
library(rgeos)
eng1c <- gCentroid(eng1) %>% coordinates()
dem = getData("SRTM",lat=eng1c[2],lon=eng1c[1])
dem2 <- getData("SRTM", lat = coords[1,2], lon = coords[1,3], path=datadir) # City of Athol coordinates
dem2 <- getData("SRTM", lat = coords[1,2], lon = coords[1,3]) # City of Athol coordinates
?get_googlemap
??get_googlemap
install.packages("ggmap")
library(ggmap)
get_googlemap(center = c(mean(coords$lon), mean(coords$lat)), zoom = 15) %>%
ggmap() +
geom_point(data = sisquoc, mapping = aes(x = longitude, y = latitude), color = "red") +
geom_text(data = sisquoc, aes(label = Name), angle = 60, hjust = 0,
color = "yellow", nudge_x = .0001, nudge_y = .0004, size = 4.5)
?register_google
register_google()
get_googlemap(center = c(mean(coords$lon), mean(coords$lat)), zoom = 15) %>%
ggmap() +
geom_point(data = sisquoc, mapping = aes(x = longitude, y = latitude), color = "red") +
geom_text(data = sisquoc, aes(label = Name), angle = 60, hjust = 0,
color = "yellow", nudge_x = .0001, nudge_y = .0004, size = 4.5)
showing_key()
library(mapproj)
map <- get_map(location = 'England', zoom = 4)
map <- get_map(location = 'England', zoom = 4, source = 'osm')
?get_map
map <- get_map(location = 'England', zoom = 4, source = 'stamen')
map <- get_map(location = 'England', zoom = 4, source = 'stamen')
map <- get_map(location = 'England', zoom = 4, source = 'osm')
library(ggmap)
library(mapproj)
map <- get_map(location = 'England', zoom = 4, source = 'osm')
map <- get_map(location = 'UK', zoom = 4, source = 'osm')
(map <- get_map(c(left = -97.1268, bottom = 31.536245, right = -97.099334, top = 31.559652)))
ggmap(map)
coords = read.csv('~/Desktop/caitlin-coords.csv')
left = min(coords$latitude)
right = max(coords$latitude)
up = max(coords$longitude)
down = min(coords$longitude)
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
ggmap(map)
points(coords$lon, coords$lat, col = "red", cex = .6)
ggmap(map) +
geom_point(coords$lon, coords$lat, col = "red", cex = .6)
ggmap(map) +
geom_point(aes(coords$lon, coords$lat), col = "red", cex = .6)
ggmap(map) +
geom_point(aes(lon, lat), col = "red", cex = .6, data = coords)
ggmap(map) +
geom_point(aes(longitude, latitude), col = "red", cex = .6, data = coords)
head(data)
head(coords)
class(coords$latitude)
ggmap(map) +
geom_point(aes(longitude, latitude), col = "red", cex = .6, data = coords)
plot(coords$latitude)
plot(coords$latitude, coords$longitude)
ggmap(map) +
geom_point(aes(longitude, latitude, col = "red"),
cex = .6, data = coords)
left = min(coords$latitude) - 2
right = max(coords$latitude) + 2
up = max(coords$longitude) + 2
down = min(coords$longitude) - 2
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
ggmap(map) +
geom_point(aes(longitude, latitude, col = "red"),
cex = .6, data = coords)
left = min(coords$latitude) * .9
right = max(coords$latitude) * 1.1
up = max(coords$longitude)  * 1.1
down = min(coords$longitude) * .9
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
left = min(coords$latitude)
right = max(coords$latitude)
up = max(coords$longitude)
down = min(coords$longitude)
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
ggmap(map) +
geom_point(aes(longitude, latitude, col = "red"),
cex = .6, data = coords)
ggmap(map) +
geom_point(aes(latitude, longitude, col = "red"),
cex = .6, data = coords)
right
right = max(coords$latitude) + 0.1
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
ggmap(map) +
geom_point(aes(latitude, longitude, col = "red"),
cex = .6, data = coords)
left = min(coords$latitude) + 0.01
right = max(coords$latitude) + 0.01
up = max(coords$longitude) + 0.01
down = min(coords$longitude) + 0.01
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
ggmap(map) +
geom_point(aes(latitude, longitude, col = "red"),
cex = .6, data = coords)
left = min(coords$latitude) - 0.01
right = max(coords$latitude) + 0.01
up = max(coords$longitude) + 0.01
down = min(coords$longitude) - 0.01
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
ggmap(map) +
geom_point(aes(latitude, longitude, col = "red"),
cex = .6, data = coords)
ggmap(map) +
geom_point(aes(latitude, longitude, col = "red"),
cex = 1.5, data = coords)
ggmap(map) +
geom_point(aes(latitude, longitude, col = "red"),
cex = 1.5, data = coords) +
theme_nothing()
ggmap(map) +
geom_point(aes(latitude, longitude, col = "red"),
cex = 2, data = coords) +
theme_nothing()
ggmap(map) +
geom_point(aes(latitude, longitude, col = "red"),
cex = 3, data = coords) +
theme_nothing()
(map <- get_map(c(left = left, bottom = down, right = right, top =up), source = 'osm'))
left
# left = min(coords$latitude) - 0.01
# right = max(coords$latitude) + 0.01
# up = max(coords$longitude) + 0.01
# down = min(coords$longitude) - 0.01
left = -2.1786654
right = -1.7453921
up = 51.5556899
down = 51.5559034
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
# left = min(coords$latitude) - 0.01
# right = max(coords$latitude) + 0.01
# up = max(coords$longitude) + 0.01
# down = min(coords$longitude) - 0.01
left = -2.1786654
right = -1.7453921
up = 51.5556899
down = 51.5559034
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
# left = min(coords$latitude) - 0.01
# right = max(coords$latitude) + 0.01
# up = max(coords$longitude) + 0.01
# down = min(coords$longitude) - 0.01
left = -2.1786654
right = -1.7453921
down = 51.5556899
up = 51.5559034
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
# left = min(coords$latitude) - 0.01
# right = max(coords$latitude) + 0.01
# up = max(coords$longitude) + 0.01
# down = min(coords$longitude) - 0.01
right = -2.1786654
left = -1.7453921
up = 51.5556899
down = 51.5559034
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
max(coords$latitude)
min(coords$latitude)
max(coords$longitude)
# left = min(coords$latitude) - 0.01
# right = max(coords$latitude) + 0.01
up = max(coords$longitude) + 0.01
down = min(coords$longitude) - 0.01
left = -2.1786654
right = -1.7453921
(map <- get_map(c(left = left, bottom = down, right = right, top =up)))
ggmap(map) +
geom_point(aes(latitude, longitude, col = "red"),
cex = 3, data = coords) +
theme_nothing()
min(coords$latitude) - 0.01
left
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
options(httr_oob_default = TRUE)
blogdown::serve_site()
blogdown::serve_site()
file.remove(list.files(, '[.]Rmd$', recursive = TRUE, full.names = TRUE))
blogdown::serve_site()
