blogdown::build_site() blogdown::serve_site()
blogdown::build_site(); blogdown::serve_site()
blogdown::build_site(); blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
remotes::install_github('rstudio/blogdown')
devtools::install_github('rstudio/blogdown')
library(blogdown)
library(blogdown)
library(blogdown)
build_site()
serve_site()
serve_site()
serve_site()
library(blogdown)
blogdown::build_site()
blogdown::serve_site()
library(blogdown)
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
object = gs_url("https://docs.google.com/spreadsheets/d/1V-VWoaEWJAal20WTay_1wF9uCBJT8kOstegjNuWvLrU/edit#gid=0")
## Script to update the talks part of my website
library(googlesheets)
gs_auth()
object = gs_url("https://docs.google.com/spreadsheets/d/1V-VWoaEWJAal20WTay_1wF9uCBJT8kOstegjNuWvLrU/edit#gid=0")
## Assuming I always want the first sheet
first_sheet = gs_read(object, check.names = TRUE, ws = 1)
head(first_sheet)
## Assuming I always want the first sheet
talks = gs_read(object, check.names = TRUE, ws = 1)
row = talks[i,]
i = 1
row = talks[i,]
colnames(talks)
row = talks[i,]
title = row$Title
date = row$Date
event = row$Event
location = row$Location
str_glue("+++
title = "{title}"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = "{event}"
# Location of event.
location = "{location}"
# Is this a featured talk? (true/false)
featured = false
+++")
str_glue("+++
title = \"{title}\"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = \"{event}\"
# Location of event.
location = \"{location}\"
# Is this a featured talk? (true/false)
featured = false
+++")
str_interp("+++
title = \"{title}\"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = \"{event}\"
# Location of event.
location = \"{location}\"
# Is this a featured talk? (true/false)
featured = false
+++")
str_interp("\+\+\+
title = \"{title}\"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = \"{event}\"
# Location of event.
location = \"{location}\"
# Is this a featured talk? (true/false)
featured = false
+++")
|
qw123f23
))))
\\\'"""
stringr::str_glue("+{title}")
stringr::str_glue("+'{title}'")
stringr::str_glue("+"{title}"")
str_glue('+++
title = "{title}"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = "{event}"
# Location of event.
location = "{location}"
# Is this a featured talk? (true/false)
featured = false
+++')
stringr::str_glue('+++
title = "{title}"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = "{event}"
# Location of event.
location = "{location}"
# Is this a featured talk? (true/false)
featured = false
+++')
talks = subset(talks, talks$Type == "Talk")
fname = stringr::str_sub(title, " ", "-")
fname
title
stringr::str_replace_all(title, " ", "-")
library(stringr)
title %>%
str_extract_all('[:alnum:]')
title %>%
str_extract_all('[:alnum:]') %>%
paste0(.)
title %>%
str_extract_all('[:alnum:]')
title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(.)
title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste(.)
title %>%
str_extract_all('[:alnum:]') %>%
unlist(.)
title %>%
str_extract_all('[:alnum:]') %>%
paste(unlist(.) )
fname = title %>%
str_extract_all('[:alnum:]') %>%
unlist(.)
paste0(fname)
paste0(fname, collapse = "")
fname = title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(., collapse = "")
title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(., collapse = "") %>%
paste0(., ".md")
fname = title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(., collapse = "") %>%
paste0("content/talk/", ., ".md")
fname
for(i in 1:nrow(talks)){
row = talks[i,]
title = row$Title
date = row$Date
event = row$Event
location = row$Location
file = stringr::str_glue('+++
title = "{title}"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = "{event}"
# Location of event.
location = "{location}"
# Is this a featured talk? (true/false)
featured = false
+++')
fname = title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(., collapse = "") %>%
paste0("content/talk/", ., ".md")
fileConn<-file(fname)
writeLines(file, fileConn)
close(fileConn)
}
#!/usr/bin/Rscript
## Script to update the talks part of my website
library(googlesheets)
library(stringr)
gs_auth()
object = gs_url("https://docs.google.com/spreadsheets/d/1V-VWoaEWJAal20WTay_1wF9uCBJT8kOstegjNuWvLrU/edit#gid=0")
## Assuming I always want the first sheet
talks = gs_read(object, check.names = TRUE, ws = 1)
talks = subset(talks, talks$Type == "Talk")
for(i in 1:nrow(talks)){
row = talks[i,]
title = row$Title
date = row$Date
event = row$Event
location = row$Location
file = stringr::str_glue('+++
title = "{title}"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = "{event}"
# Location of event.
location = "{location}"
# Is this a featured talk? (true/false)
featured = false
+++
')
fname = title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(., collapse = "") %>%
paste0("content/talk/", ., ".md")
fileConn<-file(fname)
writeLines(file, fileConn)
close(fileConn)
}
for(i in 1:nrow(talks)){
row = talks[i,]
title = row$Title
date = row$Date
event = row$Event
location = row$Location
file = stringr::str_glue('+++
title = "{title}"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = "{event}"
# Location of event.
location = "{location}"
# Is this a featured talk? (true/false)
featured = false
+++
')
fname = title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(., collapse = "") %>%
paste0("content/talk/", ., ".md")
fileConn<-file(fname)
writeLines(file, fileConn)
close(fileConn)
}
date
as.POSIXct(date)
dmy(date)
lubridate::dmy(date)
for(i in 1:nrow(talks)){
row = talks[i,]
title = row$Title
date = lubridate::dmy(row$Date)
event = row$Event
location = row$Location
file = stringr::str_glue('+++
title = "{title}"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = "{event}"
# Location of event.
location = "{location}"
# Is this a featured talk? (true/false)
featured = false
+++
')
fname = title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(., collapse = "") %>%
paste0("content/talk/", ., ".md")
fileConn<-file(fname)
writeLines(file, fileConn)
close(fileConn)
}
for(i in 1:nrow(talks)){
row = talks[i,]
title = row$Title
date = lubridate::dmy(row$Date)
event = row$Event
location = row$Location
file = stringr::str_glue('+++
title = "{title}"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = "{event}"
# Location of event.
location = "{location}"
# Is this a featured talk? (true/false)
featured = false
+++
')
fname = title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(., collapse = "") %>%
paste0("content/talk/", ., ".md")
fileConn<-file(fname)
writeLines(file, fileConn)
close(fileConn)
}
#!/usr/bin/Rscript
## Script to update the talks part of my website
library(googlesheets)
library(stringr)
gs_auth()
object = gs_url("https://docs.google.com/spreadsheets/d/1V-VWoaEWJAal20WTay_1wF9uCBJT8kOstegjNuWvLrU/edit#gid=0")
## Assuming I always want the first sheet
talks = gs_read(object, check.names = TRUE, ws = 1)
talks = subset(talks, talks$Type == "Talk")
for(i in 1:nrow(talks)){
row = talks[i,]
title = row$Title
date = lubridate::dmy(row$Date)
event = row$Event
location = row$Location
file = stringr::str_glue('+++
title = "{title}"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = "{event}"
# Location of event.
location = "{location}"
# Is this a featured talk? (true/false)
featured = false
+++
')
fname = title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(., collapse = "") %>%
paste0("content/talk/", location, ., ".md")
fileConn<-file(fname)
writeLines(file, fileConn)
close(fileConn)
}
lubridate::yday(date)
lubridate::year(date)
#!/usr/bin/Rscript
## Script to update the talks part of my website
library(googlesheets)
library(stringr)
gs_auth()
object = gs_url("https://docs.google.com/spreadsheets/d/1V-VWoaEWJAal20WTay_1wF9uCBJT8kOstegjNuWvLrU/edit#gid=0")
## Assuming I always want the first sheet
talks = gs_read(object, check.names = TRUE, ws = 1)
talks = subset(talks, talks$Type == "Talk")
for(i in 1:nrow(talks)){
row = talks[i,]
title = row$Title
date = lubridate::dmy(row$Date)
year = lubridate::year(date)
event = row$Event
location = row$Location
file = stringr::str_glue('+++
title = "{title}"
date = {date}  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = "{event}"
# Location of event.
location = "{location}"
# Is this a featured talk? (true/false)
featured = false
+++
')
fname = title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(., collapse = "") %>%
paste0("content/talk/", year, ., ".md")
fileConn<-file(fname)
writeLines(file, fileConn)
close(fileConn)
}
date
#!/usr/bin/Rscript
## Script to update the talks part of my website
library(googlesheets)
library(stringr)
gs_auth()
object = gs_url("https://docs.google.com/spreadsheets/d/1V-VWoaEWJAal20WTay_1wF9uCBJT8kOstegjNuWvLrU/edit#gid=0")
## Assuming I always want the first sheet
talks = gs_read(object, check.names = TRUE, ws = 1)
talks = subset(talks, talks$Type == "Talk")
for(i in 1:nrow(talks)){
row = talks[i,]
title = row$Title
date = lubridate::dmy(row$Date)
year = lubridate::year(date)
event = row$Event
location = row$Location
file = stringr::str_glue('+++
title = "{title}"
date = "{date}"  # Schedule page publish date.
draft = false
all_day = false
authors = []
# Name of event and optional event URL.
event = "{event}"
# Location of event.
location = "{location}"
# Is this a featured talk? (true/false)
featured = false
+++
')
fname = title %>%
str_extract_all('[:alnum:]') %>%
unlist(.) %>%
paste0(., collapse = "") %>%
paste0("content/talk/", year, ., ".md")
fileConn<-file(fname)
writeLines(file, fileConn)
close(fileConn)
}
blogdown::serve_site()
30*30
900 - 30
5 * 5
25 * 25
(25 * 25) - 25
20 * 5
500
30*30
(30*30) -30
16200 / 36
450 / 5
450 / 11
450 / 10
45 / 5
9 * 5
blogdown::serve_site()
